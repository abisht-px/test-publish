# Build the test binary.
FROM golang:1.19.4 as builder

WORKDIR /workspace

# Dependencies.
COPY go.mod go.mod
COPY go.sum go.sum
COPY vendor/ vendor/

# Source.
COPY suites/ suites/
COPY internal/ internal/

RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/register.test ./suites/register
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/iam.test ./suites/iam
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/namespace.test ./suites/namespace
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/backup.test ./suites/backup
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/backupjob.test ./suites/backupjob
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/restore.test ./suites/restore
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/deployment.test ./suites/deployment
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/portworxcsi.test ./suites/portworxcsi
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/targetcluster.test ./suites/targetcluster
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/reporting.test ./suites/reporting
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/capabilities.test ./suites/capabilities
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/dataservices.test ./suites/dataservices
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/tls.test ./suites/tls
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -c -o ./bin/copilot.test ./suites/copilot

# Use alpine as minimal base image to package the test binary.
FROM dtzar/helm-kubectl:3.12.2

WORKDIR /
COPY --from=builder /workspace/bin/* .

CMD [""]

